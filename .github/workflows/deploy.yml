name: Deploy SPA to S3

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write   # for OIDC
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET:  ${{ secrets.S3_BUCKET }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Clean and install deps
        run: |
          rm -rf node_modules package-lock.json
          npm install --force

      - name: Build
        run: npm run build

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync static assets (cache aggressively)
        run: |
          aws s3 sync dist/ s3://$S3_BUCKET/ \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp dist/index.html s3://$S3_BUCKET/index.html \
            --cache-control "no-store,no-cache,max-age=0,must-revalidate"
      - name: Invalidate CloudFront
        if: success()
        env:
          DIST_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          set -euo pipefail
          [ -n "${DIST_ID:-}" ] || { echo "‚ùå Missing CLOUDFRONT_DISTRIBUTION_ID secret"; exit 1; }
          aws cloudfront create-invalidation \
            --distribution-id "$DIST_ID" \
            --paths "/*"
